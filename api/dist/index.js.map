{"version":3,"sources":["../src/index.js"],"names":["storageDir","join","__dirname","storageConfig","diskStorage","destination","req","file","cb","filename","Date","now","extname","originalname","upload","storage","PORT","app","server","createServer","use","exposedHeaders","json","limit","set","err","db","console","log","listen","process","env","address","port"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;;;AAEA;;AAEA,IAAMA,aAAa,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,SAA3B,CAAnB;AACA,IAAMC,gBAAgB,iBAAOC,WAAP,CAAmB;AACrCC,iBAAa,qBAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AAC9BA,WAAG,IAAH,EAASR,UAAT;AACD,KAHoC;AAIrCS,cAAU,kBAACH,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AAC3BA,WAAG,IAAH,EAASE,KAAKC,GAAL,KAAa,eAAKC,OAAL,CAAaL,KAAKM,YAAlB,CAAtB;AACD;AANoC,CAAnB,CAAtB;;AASE,IAAIC,SAAS,sBAAO,EAAEC,SAASZ,aAAX,EAAP,CAAb;AACA;AACA,IAAMa,OAAO,IAAb;AACA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEAA,IAAIG,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEAH,IAAIG,GAAJ,CAAQ,oBAAK;AACTC,oBAAgB;AADP,CAAL,CAAR;;AAIEJ,IAAIG,GAAJ,CAAQ,qBAAWE,IAAX,CAAgB;AACpBC,WAAO;AADa,CAAhB,CAAR;;AAIAN,IAAIO,GAAJ,CAAQ,MAAR,EAAgBtB,SAAhB;AACAe,IAAIO,GAAJ,CAAQ,YAAR,EAAsBxB,UAAtB;AACAiB,IAAIO,GAAJ,CAAQ,QAAR,EAAkBV,MAAlB;;AAEA;AACA,uBAAQ,UAACW,GAAD,EAAMC,EAAN,EAAa;AACjB,QAAGD,GAAH,EAAQ;AACJE,gBAAQC,GAAR,CAAY,qCAAZ,EAAmDH,GAAnD;AACA,cAAOA,GAAP;AACH;;AAEDR,QAAIO,GAAJ,CAAQ,IAAR,EAAcE,EAAd;AACA;AACA,yBAAcT,GAAd;;AAEAA,QAAIC,MAAJ,CAAWW,MAAX,CAAkBC,QAAQC,GAAR,CAAYf,IAAZ,IAAoBA,IAAtC,EAA4C,YAAM;AAC9CW,gBAAQC,GAAR,4BAAqCX,IAAIC,MAAJ,CAAWc,OAAX,GAAqBC,IAA1D;AACH,KAFD;AAGH,CAbD;;kBAeehB,G","file":"index.js","sourcesContent":["import http from 'http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport multer from 'multer';\r\nimport path from 'path';\r\n\r\nimport {connect} from './database';\r\nimport AppRouter from './router';\r\n\r\n// File storage config\r\n\r\nconst storageDir = path.join(__dirname, '..', 'storage');\r\nconst storageConfig = multer.diskStorage({\r\n    destination: (req, file, cb) => {\r\n      cb(null, storageDir)\r\n    },\r\n    filename: (req, file, cb) => {\r\n      cb(null, Date.now() + path.extname(file.originalname));\r\n    }\r\n  })\r\n  \r\n  var upload = multer({ storage: storageConfig })\r\n  // End file storage config\r\n  const PORT = 3003;\r\n  const app = express();\r\n  app.server = http.createServer(app);\r\n  \r\n  app.use(morgan('dev'));\r\n  \r\n  app.use(cors({\r\n      exposedHeaders: '*'\r\n    }));\r\n    \r\n    app.use(bodyParser.json({\r\n        limit: '50mb'\r\n    }));\r\n    \r\n    app.set('root', __dirname);\r\n    app.set('storageDir', storageDir);\r\n    app.set('upload', upload);\r\n\r\n    // connect to the database\r\n    connect((err, db) => {\r\n        if(err) {\r\n            console.log(\"an error connection to the database\", err);\r\n            throw (err);\r\n        }\r\n\r\n        app.set('db', db);\r\n        // init routers\r\n        new AppRouter(app);\r\n        \r\n        app.server.listen(process.env.PORT || PORT, () => {\r\n            console.log(`App is runing on port ${app.server.address().port}`);\r\n        });\r\n    });\r\n\r\n    export default app;"]}